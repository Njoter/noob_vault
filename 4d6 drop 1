#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <ctype.h>
#include <unistd.h>
#include <math.h>
#include <stdbool.h>

typedef struct
{
    char *attributes;
    int score;
    int modifier;
}
stats;

stats attributes[] =
{
    {"str", 0, 0},
    {"con", 0, 0},
    {"dex", 0, 0},
    {"int", 0, 0},
    {"wis", 0, 0},
    {"cha", 0, 0}
};

bool assigned[] = {false, false, false, false, false, false};

// Function prototypes
int DiceRoll(void);
int cmpfunc (const void * a, const void * b);
void assign_attribute(int roll);
void print_character(void);

int main(void)
{
    char r;

    // Roll dice
    for (int i = 0; i < 6; i++)
    {
        do
        {
            printf("Type R to roll ");
            scanf("%c", &r);
        }
        while (r != 'r' && r != 'R');

        int roll = DiceRoll();
        printf("You rolled %i.\n", roll);

        //Assign roll to attributes
        assign_attribute(roll);
    }

        // Print character sheet
        print_character();
}

// Funtion for 4d6D1
int DiceRoll(void)
{
    // To seed rand
    srand(time(NULL));

    // Dice rolls
    int n = 4;
    int dice[n];

    while (true)
    {
        for (int i = 0; i < n; i++)
        {
            dice[i] = (rand() % 6) + 1;
        }

        // Sort in ascending order
        qsort(dice, n, sizeof(int), cmpfunc);

        // Add the three highest
        int t = 0;
        for (int i = 1; i < n; i++)
        {
            t += (dice[i]);
        }

        // Roll must be higher than 8
        if (t > 7)
        {
            return t;
        }
    }
}

// Function for comparing elements in array
int cmpfunc (const void * a, const void * b)
{
    return ( *(int*)a - *(int*)b );
}

// Function for assigning roll to attribute
void assign_attribute(int roll)
{
    char a[3];
    while (true)
    {
        printf("Assign %i to Str, Con, Dex, Int, Wis or Cha?\n", roll);
        scanf("%s", a);
        printf("\n");

        // Convert to lower case
        for (int i = 0; i < 3; i++)
        {
            a[i] = tolower(a[i]);
        }

        // Check if valid attribute
        for (int j = 0; j < 6; j++)
        {
            if (strcmp(a, attributes[j].attributes) == 0)
            {

                // Check if already assigned
                if (assigned[j] == true)
                {
                    printf("Attribute already assigned.\n");
                    printf("\n");
                    break;
                }

                // Assign roll to attribute
                else
                {
                    attributes[j].score = roll;
                    assigned[j] = true;
                    return;
                }
            }
        }
    }
}

void print_character(void)
{
    printf("\n");
    printf("Strenght     = %i(%i)\n", attributes[0].score, attributes[0].modifier);
    printf("Constitution = %i(%i)\n", attributes[1].score, attributes[1].modifier);
    printf("Dexterity    = %i(%i)\n", attributes[2].score, attributes[2].modifier);
    printf("Intelligence = %i(%i)\n", attributes[3].score, attributes[3].modifier);
    printf("Wisdom       = %i(%i)\n", attributes[4].score, attributes[4].modifier);
    printf("Charisma     = %i(%i)\n", attributes[5].score, attributes[5].modifier);
}
